# Don't spam me please, I'll check Travis manually.
notifications:
  email: false

language: nix

cache:
  directories:
  - $HOME/.cache/miri
  - $HOME/.cargo
  - $HOME/.rustup
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/client/haskell/.stack-work
  - $TRAVIS_BUILD_DIR/examples/.stack-work

before_cache:
  # Building Miri produces files in the "incremental" directory. Even if
  # everything was still cached and the build is a no-op, it writes new,
  # different files. That triggers Travis to upload the full cache, which takes
  # a long time. Delete these files, they are not useful.
  - rm -fr $HOME/.cache/miri/target/debug/incremental

  # The Stack database also changes even no code changes, do not cache it either.
  - rm $HOME/.stack/stack.sqlite3

before_install:
  # Bring all the tools from the pinned build environment into the PATH.
  - export devenv_path=$(nix-build --no-out-link)
  - export PATH=${devenv_path}/bin:$PATH
  - export LIBRARY_PATH=${devenv_path}/lib:$LIBRARY_PATH

  # Binaries in the profile built above may need locales, that they can't find
  # unless we point LOCALE_ARCHIVE at the archive that contains them.
  - export LOCALE_ARCHIVE=${devenv_path}/lib/locale/locale-archive

install:
  # Trigger Rustup to download and install the pinned Rust toolchain, but only
  # the minimum required (no docs).
  - rustup set profile minimal
  - cargo --version

  # Also download and install a pinned nightly, with the Miri MIR interpreter.
  - rustup +nightly-2020-01-18 component add miri
  - cargo  +nightly-2020-01-18 miri setup

  # Set up the Haskell toolchain.
  - cd $TRAVIS_BUILD_DIR/client/haskell
  - stack setup

script:
  - ./build
